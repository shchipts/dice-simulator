;   Copyright (c) 2021 International Institute for Applied Systems Analysis.
;   All rights reserved. The use and distribution terms for this software
;   are covered by the MIT License (http://opensource.org/licenses/MIT)
;   which can be found in the file LICENSE at the root of this distribution.
;   By using this software in any fashion, you are agreeing to be bound by
;   the terms of this license.
;   You must not remove this notice, or any other, from this software.

(ns dice-simulator.compute.translator-test
  (:require [clojure.test :refer :all]
            [dice-simulator.compute.translator :refer :all]
            [utilities-clj.floating-point-comparison :refer :all]))

;;; tests

(deftest net-emissions-ffi-test
  (testing "linear-logistic curve of net emissions"
    (; Act
     let [out1 (net-emissions-ffi [35.85 36 2020 -1 15 50] (range 2015 2101))
          out2 (net-emissions-ffi [35.85 51 2060 -20 20 60] (range 2015 2101 5))
          out3 (net-emissions-ffi [35.85 42 2030 -9 20 50] (range 2015 2101 5))]

      ; Assert
      (is (real= out1
                 [35.85 35.86 35.87 35.88 35.89 35.9 34.16236139 32.42472278
                  30.68708416 28.94944555 27.21180694 26.40526725 25.55131989
                  24.65209155 23.71059817 22.73075582 21.71735588 20.67600134
                  19.6130038 18.53524377 17.45 16.36475623 15.2869962
                  14.22399866 13.18264412 12.16924418 11.18940183 10.24790845
                  9.348680114 8.494732752 7.68819306 6.930340092 6.22167123
                  5.561985695 4.950478868 4.385841352 3.86635759 3.390000005
                  2.954515694 2.557503807 2.196482614 1.868946009 1.57240976
                  1.304448194 1.062722254 0.845 0.649170639 0.473253172
                  0.315400636 0.173900863 0.047174519 -0.066228878 -0.167636412
                  -0.258258209 -0.339194516 -0.411443084 -0.475906659
                  -0.533400384 -0.584658987 -0.630343676 -0.671048666
                  -0.707307308 -0.739597801 -0.768348479 -0.793942683
                  -0.816723225 -0.836996466 -0.855036027 -0.87108616
                  -0.885364796 -0.898066298 -0.909363951 -0.919412189
                  -0.928348611 -0.936295784 -0.943362857 -0.94964701
                  -0.955234754 -0.960203088 -0.964620534 -0.968548063
                  -0.972039922 -0.975144369 -0.977904331 -0.980357991
                  -0.982539308]))
      (is (real= out2
                 [35.85000000 40.90000000 45.95000000 51.00000000 56.05000000
                  61.10000000 66.15000000 71.20000000 76.25000000 81.30000000
                  62.39686317 53.68579368 42.83443510 30.65000000 18.46556490
                  7.61420632 -1.09686317 -7.52519492]))
      (is (real= out3
                 [35.85 37.9 39.95 42 34.55615423 29.99192829 23.7986056 16.5
                  9.201394399 3.00807171 -1.55615423 -4.582097201 -6.45
                  -7.552685624 -8.186547351 -8.545351814 -8.746690636
                  -8.859116022])))))

(deftest baseline-emissions-ffi-test
  (testing "baseline emissions with no climate change and no abatement"
    (; Act
     let [ssp1 (baseline-emissions-ffi :SSP1 (range 2015 2101 5))
          ssp2 (baseline-emissions-ffi :SSP2 (range 2015 2101 5))
          ssp3 (baseline-emissions-ffi :SSP3 (range 2015 2101 5))
          ssp4 (baseline-emissions-ffi :SSP4 (range 2015 2101 5))
          ssp5 (baseline-emissions-ffi :SSP5 (range 2015 2101 5))]

      ; Assert
      (is (real= ssp1
                 [34.436860 36.892236 38.286256 39.680275 40.770526 41.860776
                  42.264693 42.668610 42.853454 43.038298 41.987351 40.936403
                  38.134442 35.332481 32.982921 30.633360 28.841182 27.049004]))
      (is (real= ssp2
                 [35.140610 37.148025 39.827663 42.507302 45.124009 47.740715
                  50.677593 53.614471 56.540779 59.467088 62.278246 65.089405
                  69.578691 74.067978 77.672463 81.276948 83.721358 86.165768]))
      (is (real= ssp3
                 [36.863002 41.088257 45.123586 49.158915 52.199182 55.239448
                  57.722961 60.206474 62.214590 64.222706 66.351677 68.480648
                  70.604401 72.728153 75.150200 77.572247 80.065546 82.558844]))
      (is (real= ssp4
                 [36.532238 40.417488 44.055912 47.694335 49.642782 51.591229
                  52.334744 53.078259 53.385109 53.691960 53.310941 52.929922
                  51.175366 49.420810 47.998013 46.575217 45.452270 44.329322]))
      (is (real= ssp5
                 [35.875000 39.550000 45.355000 51.160000 58.500000 65.840000
                  73.985000 82.130000 91.665000 101.200000 109.450000 117.700000
                  123.650000 129.600000 130.250000 130.900000 129.250000
                  127.600000])))))

(deftest net-emissions-land-use-test
  (testing "SSP-based net land use emissions"
    (; Act
     let [ssp1 (net-emissions-land-use :SSP1 :1.9 (range 2015 2101 5))
          ssp2 (net-emissions-land-use :SSP2 :4.5 (range 2015 2101 5))
          ssp3 (net-emissions-land-use :SSP3 :6.0 (range 2015 2101 5))
          ssp4 (net-emissions-land-use :SSP4 :baseline (range 2015 2101 5))
          ssp5 (net-emissions-land-use :SSP5 :2.6 (range 2015 2101 5))]

      ; Assert
      (is (real= ssp1
                 [3.08100003 2.65466123 1.58995046 0.52523969 0.79821356
                  1.07118744 0.21469723 -0.64179298 -0.98741768 -1.33304239
                  -1.51437013 -1.69569787 -1.88953381 -2.08336974 -2.23495961
                  -2.38654948 -2.38545615 -2.38436283]))
      (is (real= ssp2
                 [6.41591589 5.67038800 5.12943906 4.58849012 3.88306150
                  3.17763288 1.92992128 0.68220967 -0.63673652 -1.95568271
                  -2.29315730 -2.63063189 -3.21602897 -3.80142605 -4.18043837
                  -4.55945068 -4.67976382 -4.80007697]))
      (is (real= ssp3
                 [7.03152965 7.14447910 6.45586860 5.76725810 4.97070745
                  4.17415680 3.94588785 3.71761890 4.04162895 4.36563900
                  4.02579485 3.68595070 3.09831650 2.51068230 2.44857425
                  2.38646620 2.50875475 2.63104330]))
      (is (real= ssp4
                 [2.17366251 1.21853901 1.29688701 1.37523502 1.81546742
                  2.25569982 2.42093931 2.58617881 2.92409795 3.26201710
                  3.11515163 2.96828616 2.36019976 1.75211335 1.35480745
                  0.95750154 0.70645059 0.45539964]))
      (is (real= ssp5
                 [2.65862865 1.18225230 1.36545030 1.54864830 1.89881250
                  2.24897670 3.04062525 3.83227380 3.76577530 3.69927680
                  2.96997360 2.24067040 1.65649895 1.07232750 0.78988580
                  0.50744410 0.35472945 0.20201480])))))

(deftest ssp-emissions-ffi-test
  (testing "SSP-based net FFI emissions"
    (; Act
     let [ssp (ssp-emissions-ffi :SSP2 :4.5 (range 2015 2101 5))]

      ; Assert
      (is (real= ssp
                 [34.87369539 36.61454074 38.20585254 39.79716435 40.55555113
                  41.3139379 41.73194219 42.14994647 41.57400946 40.99807244
                  38.91096114 36.82384984 33.22454699 29.62524414 24.8266117
                  20.02797927 16.97155147 13.91512367])))))

(deftest cdr-emissions-test
  (testing "logistic curve of CDR emissions"
    (; Act
     let [out1 (cdr-emissions [14.5	2030 40] (range 2015 2101))
          out2 (cdr-emissions [0.5 2030 40] (range 2015 2101 5))]

      ; Assert
      (is (real= out1
                 [0	0.541155941	1.082311882	1.623467823	2.164623764	2.705779705
                  3.044826501	3.414059604	3.813163354	4.241073769	4.695903598
                  5.174906251	5.674489493	6.190286017	6.717282278	7.25
                  7.782717722	8.309713983	8.825510507	9.325093749	9.804096402
                  10.25892623	10.68683665	11.0859404	11.4551735	11.7942203
                  12.1034122	12.38361248	12.63609774	12.86244462	13.06442734
                  13.2439296	13.40287198	13.54315497	13.66661616	13.775
                  13.86993807	13.95293781	14.02537793	14.08850866	14.14345567
                  14.19122634	14.23271753	14.26872425	14.29994853	14.32700836
                  14.35044624	14.37073728	14.38829672	14.40348684	14.41662329
                  14.42798067	14.43779765	14.44628146	14.45361187	14.45994475
                  14.46541514	14.47013997	14.47422047	14.47774421	14.48078694
                  14.48341415	14.48568247	14.48764084	14.48933153	14.49079109
                  14.49205108	14.49313875	14.49407766	14.49488813	14.49558772
                  14.49619159	14.49671283	14.49716275	14.4975511	14.4978863
                  14.49817562	14.49842535	14.49864089	14.49882694	14.49898752
                  14.49912611	14.49924574	14.49934899	14.49943811	14.49951503]))
      (is (real= out2
                 [0 0.093302748 0.16192771 0.25 0.33807229 0.406697252
                  0.450497495 0.475 0.487705368 0.494034771 0.497124941
                  0.498618785 0.499337481 0.499682451 0.499847852 0.499927114
                  0.499965087 0.499983277])))))

(deftest baseline-carbon-intensity-test
  (testing "SSP-based carbon intensity"
    (; Act
     let [out1 (baseline-carbon-intensity :SSP1 (range 2015 2105 5))
          out2 (baseline-carbon-intensity :SSP2 (range 2015 2105 5))
          out3 (baseline-carbon-intensity :SSP3 (range 2015 2105 5))
          out4 (baseline-carbon-intensity :SSP4 (range 2015 2105 5))
          out5 (baseline-carbon-intensity :SSP5 (range 2015 2105 5))]

      ; Assert
      (is (real= out1
                 [0.35643617 0.31930567 0.26187471 0.22435677 0.18956761
                  0.16527475 0.14478035 0.12907751 0.11662683 0.10644724
                  0.09541246 0.08603569 0.07511897 0.06549107 0.05811332
                  0.05143074 0.04662249 0.04215879]))
      (is (real= out2
                 [0.36696127 0.32333221 0.28731004 0.26181864 0.24170987
                  0.22623858 0.21405694 0.20426347 0.19469865 0.18681195
                  0.17779102 0.17027871 0.16676265 0.16379054 0.15837797
                  0.15374791 0.14679375 0.14078712]))
      (is (real= out3
                 [0.40039808 0.37156045 0.34903522 0.33220236 0.32282378
                  0.31491195 0.30994432 0.30552242 0.30145205 0.29773351
                  0.29383622 0.29027284 0.28630356 0.28266406 0.27953488
                  0.27666339 0.27275910 0.26918973]))
      (is (real= out4
                 [0.38610032 0.35680038 0.32207995 0.29754344 0.27030698
                  0.24921733 0.22970911 0.21346745 0.19987283 0.18803476
                  0.17614332 0.16552472 0.15308650 0.14168382 0.13264881
                  0.12424199 0.11738331 0.11094820]))
      (is (real= out5
                 [0.37309013 0.34202432 0.29860115 0.27191345 0.24202540
                  0.22298067 0.20866414 0.19844983 0.19164198 0.18645104
                  0.17793488 0.17121108 0.16185820 0.15420767 0.14144925
                  0.13073987 0.11905898 0.10906281])))))

(deftest baseline-labor-test
  (testing "SSP-based labor series"
    (; Act
     let [out1 (baseline-labor :SSP1 (range 2015 2105 5))
          out2 (baseline-labor :SSP2 (range 2015 2105 5))
          out3 (baseline-labor :SSP3 (range 2015 2105 5))
          out4 (baseline-labor :SSP4 (range 2015 2105 5))
          out5 (baseline-labor :SSP5 (range 2015 2105 5))]

      ; Assert
      (is (real= out1
                 [7.248951 7.576105 7.819021 8.061938 8.225350
                  8.388763 8.459631 8.530500 8.511338 8.492176
                  8.395563 8.298950 8.133169 7.967387 7.738921
                  7.510454 7.234221 6.957989]))
      (is (real= out2
                 [7.239320 7.611250 7.936620 8.261990 8.524555
                  8.787120 8.978115 9.169110 9.276905 9.384700
                  9.420790 9.456880 9.432070 9.407260 9.330605
                  9.253950 9.143185 9.032420]))
      (is (real= out3
                 [7.288722 7.697854 8.106081 8.514307 8.885764
                  9.257220 9.607176 9.957131 10.265746 10.574362
                  10.845869 11.117377 11.375396 11.633415 11.883871
                  12.134327 12.377231 12.620136]))
      (is (real= out4
                 [7.261118 7.626353 7.942459 8.258565 8.512123
                  8.765680 8.956104 9.146527 9.261989 9.377450
                  9.424990 9.472529 9.471985 9.471440 9.436513
                  9.401586 9.347016 9.292446]))
      (is (real= out5
                 [7.223000 7.552000 7.803000 8.054000 8.228500
                  8.403000 8.491000 8.579000 8.584000 8.589000
                  8.523000 8.457000 8.328500 8.200000 8.015500
                  7.831000 7.603000 7.375000])))))

(deftest baseline-tfp-test
  (testing "SSP-based tfp series"
    (; Act
     let [out1 (baseline-tfp :SSP1 (range 2015 2105 5))
          out2 (baseline-tfp :SSP2 (range 2015 2105 5))
          out3 (baseline-tfp :SSP3 (range 2015 2105 5))
          out4 (baseline-tfp :SSP4 (range 2015 2105 5))
          out5 (baseline-tfp :SSP5 (range 2015 2105 5))]

      ; Assert
      (is (real= out1
                 [3.701586474 4.040388807 4.61272567 5.11760835 5.736112555
                  6.298345341 6.8696632 7.407537166 7.94626059 8.468289958
                  9.014485201 9.555529395 10.09810382 10.64704491 11.21388476
                  11.7988129 12.39100041 13.01356395]))
      (is (real= out2
                 [3.683485462 4.013558732 4.412844365 4.764151122 5.111832889
                  5.427487324 5.767738957 6.083959504 6.448026999 6.793337363
                  7.211242845 7.613440515 8.073101582 8.521394451 9.030675577
                  9.533004006 10.09392068 10.65169273]))
      (is (real= out3
                 [5.576937979 6.141850457 6.642826111 7.085132843 7.333526641
                  7.559533724 7.689749735 7.810156444 7.902652967 7.989421673
                  8.112822346 8.229617752 8.362558843 8.488947781 8.634008173
                  8.77232152 8.945250252 9.110477518]))
      (is (real= out4
                 [4.582461832 5.02223436 5.570290767 6.056563525 6.522148585
                  6.948105724 7.319188787 7.667400448 7.990822645 8.300962438
                  8.615619506 8.922339025 9.204414369 9.482863844 9.754698627
                  10.02530878 10.29701522 10.5688208]))
      (is (real= out5
                 [2.29102182 2.474292659 2.823485605 3.121436114 3.540558435
                  3.9072344 4.296267198 4.651187611 5.034990827 5.395803595
                  5.804771494 6.197285034 6.6230324 7.039839787 7.495860326
                  7.950214304 8.448153614 8.951844045])))))
